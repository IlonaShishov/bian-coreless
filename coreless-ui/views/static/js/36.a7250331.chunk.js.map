{"version":3,"sources":["views/forms/customer-offer/CustomerOffer.js"],"names":["CustomerOffer","React","Component","constructor","props","super","this","state","customerFirstName","customerLastName","customerEmail","customerAddress","customerIncome","customerRequestedServicesCC","customerRequestedServicesLoan","customerRequestedServicesNA","response","clearState","setState","setTimeout","handleInputChanged","event","target","id","value","income","test","handleButtonClicked","requestOptions","method","headers","body","JSON","stringify","procedure","customerReference","fetch","then","res","json","data","message","render","xs","className","htmlFor","type","placeholder","onChange","bind","label","checked","onClick","style","color"],"mappings":"mHAAA,oFAee,MAAMA,UAAsBC,IAAMC,UAC/CC,YAAYC,GACVC,MAAMD,GAENE,KAAKC,MAAQ,CACXC,kBAAmB,GACnBC,iBAAkB,GAClBC,cAAe,GACfC,gBAAiB,GACjBC,eAAgB,GAChBC,6BAA6B,EAC7BC,+BAA+B,EAC/BC,6BAA6B,EAC7BC,SAAU,IAGdC,aACEX,KAAKY,SAAS,CACZV,kBAAmB,GACnBC,iBAAkB,GAClBC,cAAe,GACfC,gBAAiB,GACjBC,eAAgB,GAChBC,6BAA6B,EAC7BC,+BAA+B,EAC/BC,6BAA6B,IAE/BI,YAAW,KACTb,KAAKY,SAAS,CACZF,SAAU,OAEX,KAELI,mBAAmBC,GACjB,OAAQA,EAAMC,OAAOC,IACnB,IAAK,oBACHjB,KAAKY,SAAS,CACZV,kBAAmBa,EAAMC,OAAOE,QAElC,MACF,IAAK,mBACHlB,KAAKY,SAAS,CACZT,iBAAkBY,EAAMC,OAAOE,QAEjC,MACF,IAAK,gBACHlB,KAAKY,SAAS,CACZR,cAAeW,EAAMC,OAAOE,QAE9B,MACF,IAAK,kBACHlB,KAAKY,SAAS,CACZP,gBAAiBU,EAAMC,OAAOE,QAEhC,MACF,IAAK,iBACH,MAAMC,EAASJ,EAAMC,OAAOE,OACb,KAAXC,GAAiB,aAAaC,KAAKD,KACrCnB,KAAKY,SAAS,CACZN,eAAgBa,IAGpB,MACF,IAAK,8BACHnB,KAAKY,SAAS,CACZL,6BAA8BP,KAAKC,MAAMM,8BAE3C,MACF,IAAK,gCACHP,KAAKY,SAAS,CACZJ,+BAAgCR,KAAKC,MAAMO,gCAE7C,MACF,IAAK,8BACHR,KAAKY,SAAS,CACZH,6BAA8BT,KAAKC,MAAMQ,+BAKjDY,sBACE,MAAMC,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEC,UAAW,CAAEC,kBAAmB7B,KAAKC,MAAMC,sBAEpE4B,MAAM,MAAOR,GACVS,MAAMC,GAAQA,EAAIC,SAClBF,MAAMG,IACLlC,KAAKY,SAAS,CAAEF,SAAUwB,EAAKC,aAGnCnC,KAAKW,aAGPyB,SACE,OACE,cAAC,KAAD,UACE,eAAC,IAAD,CAAMC,GAAI,GAAV,UACE,cAAC,IAAD,UACE,0DAEF,cAAC,IAAD,UACE,eAAC,IAAD,WACE,sBAAKC,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,oBAApB,wBACA,cAAC,IAAD,CACEC,KAAK,OACLvB,GAAG,oBACHwB,YAAY,OACZvB,MAAOlB,KAAKC,MAAMC,kBAClBwC,SAAU1C,KAAKc,mBAAmB6B,KAAK3C,WAG3C,sBAAKsC,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,mBAApB,uBACA,cAAC,IAAD,CACEC,KAAK,OACLvB,GAAG,mBACHwB,YAAY,MACZvB,MAAOlB,KAAKC,MAAME,iBAClBuC,SAAU1C,KAAKc,mBAAmB6B,KAAK3C,WAG3C,sBAAKsC,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,gBAApB,2BACA,cAAC,IAAD,CACEC,KAAK,QACLvB,GAAG,gBACHwB,YAAY,mBACZvB,MAAOlB,KAAKC,MAAMG,cAClBsC,SAAU1C,KAAKc,mBAAmB6B,KAAK3C,WAG3C,sBAAKsC,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,kBAApB,qBACA,cAAC,IAAD,CACEC,KAAK,OACLvB,GAAG,kBACHwB,YAAY,GACZvB,MAAOlB,KAAKC,MAAMI,gBAClBqC,SAAU1C,KAAKc,mBAAmB6B,KAAK3C,WAG3C,sBAAKsC,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,iBAApB,oBACA,cAAC,IAAD,CACEC,KAAK,OACLvB,GAAG,iBACHwB,YAAY,GACZvB,MAAOlB,KAAKC,MAAMK,eAClBoC,SAAU1C,KAAKc,mBAAmB6B,KAAK3C,WAG3C,sBAAKsC,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,4BAApB,SACE,0DAEF,cAAC,IAAD,CACEtB,GAAG,8BACH2B,MAAM,cACNC,QAAS7C,KAAKC,MAAMM,4BACpBuC,QAAS9C,KAAKc,mBAAmB6B,KAAK3C,QAExC,cAAC,IAAD,CACEiB,GAAG,gCACH2B,MAAM,OACNC,QAAS7C,KAAKC,MAAMO,8BACpBsC,QAAS9C,KAAKc,mBAAmB6B,KAAK3C,QAExC,cAAC,IAAD,CACEiB,GAAG,8BACH2B,MAAM,cACNC,QAAS7C,KAAKC,MAAMQ,4BACpBqC,QAAS9C,KAAKc,mBAAmB6B,KAAK3C,gBAK9C,cAAC,IAAD,CAASwC,KAAK,SAASF,UAAU,OAAOQ,QAAS9C,KAAKqB,oBAAoBsB,KAAK3C,MAA/E,sBAGA,8BACE,wBAAQ+C,MAAO,CAAEC,MAAO,QAAxB,SAAmChD,KAAKC,MAAMS","file":"static/js/36.a7250331.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormTextarea,\n  CFormCheck,\n  CRow,\n} from '@coreui/react'\n\nexport default class CustomerOffer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      customerFirstName: '',\n      customerLastName: '',\n      customerEmail: '',\n      customerAddress: '',\n      customerIncome: '',\n      customerRequestedServicesCC: false,\n      customerRequestedServicesLoan: false,\n      customerRequestedServicesNA: false,\n      response: '',\n    }\n  }\n  clearState() {\n    this.setState({\n      customerFirstName: '',\n      customerLastName: '',\n      customerEmail: '',\n      customerAddress: '',\n      customerIncome: '',\n      customerRequestedServicesCC: false,\n      customerRequestedServicesLoan: false,\n      customerRequestedServicesNA: false,\n    })\n    setTimeout(() => {\n      this.setState({\n        response: '',\n      })\n    }, 3000)\n  }\n  handleInputChanged(event) {\n    switch (event.target.id) {\n      case 'CustomerFirstName':\n        this.setState({\n          customerFirstName: event.target.value,\n        })\n        break\n      case 'CustomerLastName':\n        this.setState({\n          customerLastName: event.target.value,\n        })\n        break\n      case 'CustomerEmail':\n        this.setState({\n          customerEmail: event.target.value,\n        })\n        break\n      case 'CustomerAddress':\n        this.setState({\n          customerAddress: event.target.value,\n        })\n        break\n      case 'CustomerIncome':\n        const income = event.target.value\n        if (income === '' || /^[0-9\\b]+$/.test(income)) {\n          this.setState({\n            customerIncome: income,\n          })\n        }\n        break\n      case 'CustomerRequestedServicesCC':\n        this.setState({\n          customerRequestedServicesCC: !this.state.customerRequestedServicesCC,\n        })\n        break\n      case 'CustomerRequestedServicesLoan':\n        this.setState({\n          customerRequestedServicesLoan: !this.state.customerRequestedServicesLoan,\n        })\n        break\n      case 'CustomerRequestedServicesNA':\n        this.setState({\n          customerRequestedServicesNA: !this.state.customerRequestedServicesNA,\n        })\n        break\n    }\n  }\n  handleButtonClicked() {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ procedure: { customerReference: this.state.customerFirstName } }),\n    }\n    fetch('/co', requestOptions)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ response: data.message })\n      })\n\n    this.clearState()\n  }\n\n  render() {\n    return (\n      <CRow>\n        <CCol xs={12}>\n          <CCardHeader>\n            <strong>New Customer Offer</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CForm>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"CustomerFirstName\">First Name</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"CustomerFirstName\"\n                  placeholder=\"John\"\n                  value={this.state.customerFirstName}\n                  onChange={this.handleInputChanged.bind(this)}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"CustomerLastName\">Last Name</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"CustomerLastName\"\n                  placeholder=\"Doe\"\n                  value={this.state.customerLastName}\n                  onChange={this.handleInputChanged.bind(this)}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"CustomerEmail\">Email address</CFormLabel>\n                <CFormInput\n                  type=\"email\"\n                  id=\"CustomerEmail\"\n                  placeholder=\"name@example.com\"\n                  value={this.state.customerEmail}\n                  onChange={this.handleInputChanged.bind(this)}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"CustomerAddress\">Address</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"CustomerAddress\"\n                  placeholder=\"\"\n                  value={this.state.customerAddress}\n                  onChange={this.handleInputChanged.bind(this)}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"CustomerIncome\">Income</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"CustomerIncome\"\n                  placeholder=\"\"\n                  value={this.state.customerIncome}\n                  onChange={this.handleInputChanged.bind(this)}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"CustomerRequestedServices\">\n                  <strong>Requested Services</strong>\n                </CFormLabel>\n                <CFormCheck\n                  id=\"CustomerRequestedServicesCC\"\n                  label=\"Credit Card\"\n                  checked={this.state.customerRequestedServicesCC}\n                  onClick={this.handleInputChanged.bind(this)}\n                />\n                <CFormCheck\n                  id=\"CustomerRequestedServicesLoan\"\n                  label=\"Loan\"\n                  checked={this.state.customerRequestedServicesLoan}\n                  onClick={this.handleInputChanged.bind(this)}\n                />\n                <CFormCheck\n                  id=\"CustomerRequestedServicesNA\"\n                  label=\"New Account\"\n                  checked={this.state.customerRequestedServicesNA}\n                  onClick={this.handleInputChanged.bind(this)}\n                />\n              </div>\n            </CForm>\n          </CCardBody>\n          <CButton type=\"submit\" className=\"mb-3\" onClick={this.handleButtonClicked.bind(this)}>\n            Validate\n          </CButton>\n          <div>\n            <strong style={{ color: 'blue' }}>{this.state.response}</strong>\n          </div>\n        </CCol>\n      </CRow>\n    )\n  }\n}\n"],"sourceRoot":""}