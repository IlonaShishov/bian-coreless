{"version":3,"sources":["views/forms/customer-offer/CustomerOffer.js"],"names":["CustomerOffer","React","Component","constructor","props","super","this","state","customerFirstName","customerLastName","clearState","setState","handleInputChanged","event","target","id","value","handleButtonClicked","requestOptions","method","headers","body","JSON","stringify","procedure","customerReference","fetch","then","res","console","log","json","render","xs","className","htmlFor","type","placeholder","onChange","bind","label","onClick"],"mappings":"mHAAA,oFAee,MAAMA,UAAsBC,IAAMC,UAC/CC,YAAYC,GACVC,MAAMD,GAENE,KAAKC,MAAQ,CACXC,kBAAmB,GACnBC,iBAAkB,IAGtBC,aACEJ,KAAKK,SAAS,CACZH,kBAAmB,GACnBC,iBAAkB,KAGtBG,mBAAmBC,GACjB,OAAQA,EAAMC,OAAOC,IACnB,IAAK,oBACHT,KAAKK,SAAS,CACZH,kBAAmBK,EAAMC,OAAOE,QAElC,MACF,IAAK,mBACHV,KAAKK,SAAS,CACZF,iBAAkBI,EAAMC,OAAOE,SAKvCC,sBACE,MAAMC,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEC,UAAW,CAAEC,kBAAmBnB,KAAKC,MAAMC,sBAEpEkB,MAAM,MAAOR,GAAgBS,MAAMC,GAAQC,QAAQC,IAAIF,EAAIG,UAE3DzB,KAAKI,aAGPsB,SACE,OACE,cAAC,KAAD,UACE,eAAC,IAAD,CAAMC,GAAI,GAAV,UACE,cAAC,IAAD,UACE,0DAEF,cAAC,IAAD,UACE,eAAC,IAAD,WACE,sBAAKC,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,oBAApB,wBACA,cAAC,IAAD,CACEC,KAAK,OACLrB,GAAG,oBACHsB,YAAY,OACZrB,MAAOV,KAAKC,MAAMC,kBAClB8B,SAAUhC,KAAKM,mBAAmB2B,KAAKjC,WAG3C,sBAAK4B,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,mBAApB,uBACA,cAAC,IAAD,CACEC,KAAK,OACLrB,GAAG,mBACHsB,YAAY,MACZrB,MAAOV,KAAKC,MAAME,iBAClB6B,SAAUhC,KAAKM,mBAAmB2B,KAAKjC,WAG3C,sBAAK4B,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,gBAApB,2BACA,cAAC,IAAD,CAAYC,KAAK,QAAQrB,GAAG,gBAAgBsB,YAAY,wBAE1D,sBAAKH,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,kBAApB,qBAEA,cAAC,IAAD,CAAYC,KAAK,OAAOrB,GAAG,kBAAkBsB,YAAY,QAE3D,sBAAKH,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,iBAApB,oBACA,cAAC,IAAD,CAAYC,KAAK,OAAOrB,GAAG,iBAAiBsB,YAAY,QAE1D,sBAAKH,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,4BAApB,SACE,0DAEF,cAAC,IAAD,CAAYpB,GAAG,iBAAiByB,MAAM,gBACtC,cAAC,IAAD,CAAYzB,GAAG,iBAAiByB,MAAM,SACtC,cAAC,IAAD,CAAYzB,GAAG,iBAAiByB,MAAM,wBAI5C,cAAC,IAAD,CAASJ,KAAK,SAASF,UAAU,OAAOO,QAASnC,KAAKW,oBAAoBsB,KAAKjC,MAA/E","file":"static/js/36.b41b2e6d.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormTextarea,\n  CFormCheck,\n  CRow,\n} from '@coreui/react'\n\nexport default class CustomerOffer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      customerFirstName: '',\n      customerLastName: '',\n    }\n  }\n  clearState() {\n    this.setState({\n      customerFirstName: '',\n      customerLastName: '',\n    })\n  }\n  handleInputChanged(event) {\n    switch (event.target.id) {\n      case 'CustomerFirstName':\n        this.setState({\n          customerFirstName: event.target.value,\n        })\n        break\n      case 'CustomerLastName':\n        this.setState({\n          customerLastName: event.target.value,\n        })\n        break\n    }\n  }\n  handleButtonClicked() {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ procedure: { customerReference: this.state.customerFirstName } }),\n    }\n    fetch('/co', requestOptions).then((res) => console.log(res.json()))\n\n    this.clearState()\n  }\n\n  render() {\n    return (\n      <CRow>\n        <CCol xs={12}>\n          <CCardHeader>\n            <strong>New Customer Offer</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CForm>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"CustomerFirstName\">First Name</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"CustomerFirstName\"\n                  placeholder=\"John\"\n                  value={this.state.customerFirstName}\n                  onChange={this.handleInputChanged.bind(this)}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"CustomerLastName\">Last Name</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"CustomerLastName\"\n                  placeholder=\"Doe\"\n                  value={this.state.customerLastName}\n                  onChange={this.handleInputChanged.bind(this)}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"CustomerEmail\">Email address</CFormLabel>\n                <CFormInput type=\"email\" id=\"CustomerEmail\" placeholder=\"name@example.com\" />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"CustomerAddress\">Address</CFormLabel>\n\n                <CFormInput type=\"text\" id=\"CustomerAddress\" placeholder=\"\" />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"CustomerIncome\">Income</CFormLabel>\n                <CFormInput type=\"text\" id=\"CustomerIncome\" placeholder=\"\" />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"CustomerRequestedServices\">\n                  <strong>Requested Services</strong>\n                </CFormLabel>\n                <CFormCheck id=\"CustomerIncome\" label=\"Credit Card\" />\n                <CFormCheck id=\"CustomerIncome\" label=\"Loan\" />\n                <CFormCheck id=\"CustomerIncome\" label=\"New Account\" />\n              </div>\n            </CForm>\n          </CCardBody>\n          <CButton type=\"submit\" className=\"mb-3\" onClick={this.handleButtonClicked.bind(this)}>\n            Validate\n          </CButton>\n        </CCol>\n      </CRow>\n    )\n  }\n}\n"],"sourceRoot":""}